/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ejercicio1;

public class App {
    static public int exponente(int a, int n) {
        if (n == 1) {
            return a;
        } else if (n % 2 == 0) { // n par
            return exponente(a, n / 2) ^ 2;
        } else {
            return exponente(a, (n - 1) / 2) ^ 2;
        }
    }

    public static int fuerzaBruta(int a, int n) {
        int res = a;
        for (int i = 0; i < n; i++) {
            res = res * a;
        }
        return res;
    }

    public static void main(String[] args) {
        System.out.println(
                " -------------------------------------------------------------------------------------------------------------------------------------- ");
        System.out.printf("| %-12s | %-57s | %57s |\n", "    ^N    ", "        Divide y venceras",
                "Fuerza Bruta                  ");
        System.out.println(
                "|--------------|-----------------------------------------------------------|-----------------------------------------------------------|");
        System.out.printf("| %-12s | %-12s | %-12s | %-12s | %-12s | %-12s | %-12s | %-12s | %-12s |\n",
                "", "T(n) ms", "T/N", "T/(N*LogN)", "T/N^2", "T(n) ms", "T/N", "T/(N*LogN)", "T/(N^2)");

        // realizar hasta la potencia de 50
        for (int i = 4; i < 400; i+=6) {
            double t1, t2;
            double media1 = 0;
            double media2 = 0;
           
            // 10 repeticiones por si acaso
            for (int k = 0; k < 10; k++) { 
                // iteracion con divide y venceras
                t1 = System.nanoTime();
                exponente(7, i);
                t2 = System.nanoTime();
                media1 += t2 - t1;

                // iteracion con fuerzaBruta
                t1 = System.nanoTime();
                fuerzaBruta(7, i);
                t2 = System.nanoTime();
                media2 += t2 - t1;
            }

            // transformar de nano segundo a milisegundo
            media1 = media1 / 1000;
            media2 = media2 / 1000;
            int repeticiones = 50;

            // imprimir resultados parciales
            System.out.println(
                    "|--------------|-----------------------------------------------------------|-----------------------------------------------------------|");
            System.out.printf("| %12d | %12f | %12f | %12f | %12f | %12f | %12f | %12f | %12f |\n",
                    i, media1, media1 / repeticiones,
                    media1 / (repeticiones * (Math.log(repeticiones) / Math.log(2))),
                    media1 / (repeticiones ^ 2),
                    media2, media2 / repeticiones, media2 / (repeticiones * (Math.log(repeticiones) / Math.log(2))),
                    media2 / (repeticiones ^ 2));

        }
        System.out.println(
                " -------------------------------------------------------------------------------------------------------------------------------------- ");
    }
}
